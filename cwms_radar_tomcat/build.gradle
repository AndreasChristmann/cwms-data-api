apply plugin: 'war'

dependencies {
    testImplementation 'com.github.h-thurow:tomcat8jndi:1.0.0'
    testImplementation 'org.apache.tomcat:tomcat-dbcp:8.0.47'
    implementation (project(':cwms_radar_api')) {     
        exclude group: 'org.eclipse.jetty'
        exclude group: 'org.eclipse.jetty.websocket'
    }
    compileOnly 'javax:javaee-web-api:7.0'
    
    implementation("io.javalin:javalin:3.12.0") {
        exclude group: "org.eclipse.jetty"
        exclude group: "org.eclipse.jetty.websocket"
    }
    implementation("io.javalin:javalin-openapi:3.12.0") {
        //exclude group: "org.eclipse.jetty"
        exclude group: "org.eclipse.jetty.websocket"
    }
    implementation 'io.swagger.core.v3:swagger-core:2.0.9'
    implementation 'org.webjars:swagger-ui:3.24.3'    
    implementation 'org.slf4j:slf4j-simple:1.7.28'
    runtime 'jstl:jstl:1.2'    

    testImplementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'

    
}

// get 

task getSwagger {
    doLast {        
        project.mkdir("$buildDir/downloaded")
        project.mkdir("$buildDir/extra/swagger-ui")
        def f = new File("$buildDir/downloaded/swagger-ui.zip")
        if(!f.exists()){
            new URL("https://github.com/swagger-api/swagger-ui/archive/v3.39.0.zip").withInputStream{ i -> f.withOutputStream{ it << i }}
        }
    }
}

task unzipSwagger(type: Copy) {
    dependsOn getSwagger

    eachFile {
        path -= ~/^.+?\/.+?\//
    }
    from zipTree("$buildDir/downloaded/swagger-ui.zip")
    into "$buildDir/extra/"
    exclude "**/index.html"
    include "**/dist/**"
    includeEmptyDirs = false
}


war {
    dependsOn unzipSwagger
    from "$buildDir/extra"
    from "src/resources/"
}


test {
	useJUnitPlatform()
}

description = 'CWMS RADAR Tomcat Instance'
